%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
name: Plain Text Enhanced
file_extensions:
  - txt
scope: text.ptenhanced
first_line_match: '(?<![^\t])#{1,3}\s.'
variables:
  uri: '(?<![\S])(https?:\/\/|php:\/\/)?([\p{L}0-9]+[^.\s]*)(\.[^.\s]+)*(\.[a-zA-Z]{2,})(/{0,1}[^.\s/])*/?(?![^\p{L}\s/!?\.$])'
  list_characters: '[\*\+\-~·‐–—•⁃<>]'
  tag_characters: '[!\$€&\+:;<=>\?@`|~·•]'
  checkbox_open: '[\[\(\{]'
  checkbox_closed: '[\]\)\}]'
contexts:
  # The prototype context is prepended to all contexts but those setting
  # meta_include_prototype: false.
  prototype:
    - include: base
    - include: comment

  main:
    - include: test
    - include: unformatted
    - include: checkbox_marked2
    - include: checkbox_marked1
    - include: checkbox
    - include: special4
    - include: special3
    - include: special2
    - include: special1
    - include: tag3
    - include: tag2
    - include: tag1
    - include: list2
    - include: list
    - include: uri
    - include: key
    - include: number
    - include: highlight2
    - include: highlight
    - include: quote
    - include: italic
    - include: bold
    - include: line_solid_infinite
    - include: line_solid
    - include: line
    - include: heading3
    - include: heading2
    - include: heading1

  base:
    - match: ''

  heading1:
    - match: '(?<![^\t])#{3}\s+?[^\s]+'
      comment: Heading — largest
      scope: punctuation.definition.heading.txt heading1.txt
      push:
        - meta_content_scope: punctuation.definition.heading.txt heading1.txt
        - match: (?=\s+\/\/)|$
          pop: true

  heading2:
    - match: '(?<![^\t])#{2}\s+?[^\s]+'
      comment: Heading — medium
      scope: punctuation.definition.heading.txt heading2.txt
      push:
        - meta_content_scope: punctuation.definition.heading.txt heading2.txt
        - match: (?=\s+\/\/)|$
          pop: true

  heading3:
    - match: '(?<![^\t])#{1}\s+?[^\s]+'
      comment: Heading — smallest
      scope: punctuation.definition.heading.txt heading3.txt
      push:
        - meta_content_scope: punctuation.definition.heading.txt heading3.txt
        - match: (?=\s+\/\/)|$
          pop: true

  line:
    - match: '(?<![^\t])([^\p{L}\d#\s.])\1{2,}'
      comment: Horisontal line — normal
      scope: punctuation.definition.heading.txt line.txt
      push:
        - meta_content_scope: punctuation.definition.heading.txt line.txt
        - match: (?=\s+\/\/)|$
          pop: true

  line_solid:
    # - match: '(?<![^\t])#{4,}(?=[^\n\S])'
    - match: '(?<![^\t])#{4,}'
      comment: Horisontal line — thick
      scope: markup.heading.txt punctuation.definition.heading.txt line_solid.txt

  line_solid_infinite:
    - match: '(?<![^\t])#{3}$'
      comment: Horisontal line — thick
      scope: markup.heading.txt punctuation.definition.heading.txt line_solid_infinite.txt
      push:
        - meta_content_scope: markup.heading.txt punctuation.definition.heading.txt line_solid_infinite.txt
        - match: \n?|$
        - match: $
        # - match: (?=\s+(\/\/|{{tag_characters}}{1,}\p{L}\S+))|$ # Stop before a comment or tag
          pop: true

  bold:
    - match: '(?<!\S)\*[^\s\*][^\*]*[^\s]?'
      comment: Bold
      scope: bold.txt
      push:
        - include: italic
        - meta_content_scope: bold.txt
        - match: '(\s+\/\/.*$)?(?<=\S\*)'
          pop: true

  italic:
    - match: '(?<!\S)_[^\s_][^_]*[^\s]?'
      comment: Italic
      scope: italic.txt
      push:
        - include: bold
        # - include: bold_italic
        - meta_content_scope: italic.txt
        - match: '(\s+\/\/.*$)?(?<=\S_)'
          pop: true

  quote:
    - match: '(?<!\S)"[^\s"][^"]*[^\s"]?'
      comment: Quote
      scope: quote.txt
      push:
        - meta_content_scope: quote.txt
        - match: '(\s+\/\/.*$)?(?<=\S")'
          pop: true

  highlight:
    - match: '(?<!\S)\^[^\^]+?\^'
      comment: Highlight
      scope: invalid.txt highlight.txt

  highlight2:
    - match: '(?<!\S)\^{2}[^\^]+?\^{2}'
      comment: Highlight
      scope: invalid.txt highlight2.txt

  number:
    - match: '(?<!\w)(\d)+'
      comment: Number
      scope: constant.numeric.txt number.txt

  key:
    - match: '\b[\p{Lu}\d\-]*(\p{Lu}+\-?\d+|\d+\-?\p{Lu}+)[\p{Lu}\d\-]*\b'
      comment: Key
      scope: constant.numeric.txt number.txt

  uri:
    - match: '{{uri}}'
      comment: URI, URL or link
      scope: markup.underline.link.txt uri uri.txt

  list:
    - match: '(?<![^\t]){{list_characters}}(?=\s+\S)'
      comment: List item
      scope: string.txt list.txt
      push:
        - include: bold
        - include: italic
        - include: quote
        - include: highlight
        - include: highlight2
        - include: number
        - include: key
        - include: uri
        - include: list
        - include: list2
        - include: checkbox
        - include: checkbox_marked1
        - include: checkbox_marked2
        - include: special1
        - include: special2
        - include: tag1
        - include: tag2
        - include: tag3
        - meta_content_scope: lists-after.txt
        - match: (?=\s+\/\/)|$
          pop: true

  list2:
    - match: '(?<![^\t])(\d+\p{L}*|\d*\p{L}+)(\.?\)|\.\)?)(?=\s+\S)'
      comment: List item
      scope: string.txt list.txt
      push:
        - include: bold
        - include: italic
        - include: quote
        - include: highlight
        - include: highlight2
        - include: number
        - include: key
        - include: uri
        - include: list
        - include: list2
        - include: checkbox
        - include: checkbox_marked1
        - include: checkbox_marked2
        - include: special1
        - include: special2
        - include: tag1
        - include: tag2
        - include: tag3
        - meta_content_scope: lists-after.txt
        - match: (?=\s+\/\/)|$
          pop: true

  tag1:
    - match: '(?<!\S)({{tag_characters}}){1}\p{L}\S+?(?=\s|$)'
      comment: Tag — type 1
      scope: entity.name.tag.txt tag1.txt
      push:
        - include: bold
        - include: italic
        - include: quote
        - include: highlight
        - include: highlight2
        - include: uri
        - meta_content_scope: tag1-after.txt
        - match: (?=\s+\/\/|\s``)|$
          pop: true

  tag2:
    - match: '(?<!\S){{tag_characters}}{2}\p{L}\S+?(?=\s|$)'
      comment: Tag — type 2
      scope: constant.character.txt constant.other.txt tag2.txt
      push:
        - include: bold
        - include: italic
        - include: quote
        - include: highlight
        - include: highlight2
        - include: uri
        - meta_content_scope: tag2-after.txt
        - match: (?=\s+\/\/|\s``)|$
          pop: true

  tag3:
    - match: '(?<!\S)#{1}[\p{L}]\S+?(?=(\s#{1}\p{L}*)*\s*(``.*)*$)'
      comment: Tag — type 3
      scope: tag3.txt

  special1:
    - match: '(?<![^\t])(\[\S+\])'
      scope: string.txt special1.txt
      comment: Special — type 1
      push:
        - include: bold
        - include: italic
        - include: quote
        - include: highlight
        - include: highlight2
        - include: number
        - include: key
        - include: uri
        - include: list
        - include: list2
        - include: checkbox
        - include: checkbox_marked1
        - include: checkbox_marked2
        - include: special1
        - include: special2
        - include: tag1
        - include: tag2
        - include: tag3
        - meta_content_scope: special1-after.txt
        - match: (?=\s+\/\/)|$
          pop: true

  special2:
    - match: '(?<![^\t])(<.{0,3}>)(?=(?=\s|$))'
      comment: Special — type 2
      scope: string.txt special2.txt
      push:
        - include: bold
        - include: italic
        - include: quote
        - include: highlight
        - include: highlight2
        - include: number
        - include: key
        - include: uri
        - include: list
        - include: list2
        - include: checkbox
        - include: checkbox_marked1
        - include: checkbox_marked2
        - include: special1
        - include: special2
        - include: tag1
        - include: tag2
        - include: tag3
        - meta_content_scope: special2-after.txt
        - match: (?=\s+\/\/)|$
          pop: true

  special3:
    - match: '(?<=^|\t)\|(?=[^\n\S])'
      comment: Special — type 3
      scope: special3.txt
      push:
        - include: highlight
        - include: highlight2
        - include: number
        - include: key
        - include: uri
        - include: list
        - include: list2
        - include: checkbox
        - include: checkbox_marked1
        - include: checkbox_marked2
        - include: special1
        - include: special2
        - include: tag1
        - include: tag2
        - include: tag3
        - meta_content_scope: special3-inside.txt
        - match: \n?|.|$
        - match: $
        # - match: (?=\s+(\/\/|{{tag_characters}}{1,}\p{L}\S+))|$ # Stop before a comment or tag
          pop: true

  special4:
    - match: '(?<=^|\t)\|{2}(?=[^\n\S])'
      comment: Special — type 4
      scope: special4.txt
      push:
        - include: highlight
        - include: highlight2
        - include: number
        - include: key
        - include: uri
        - include: list
        - include: list2
        - include: checkbox
        - include: checkbox_marked1
        - include: checkbox_marked2
        - include: special1
        - include: special2
        - include: tag1
        - include: tag2
        - include: tag3
        - meta_content_scope: special4-inside.txt
        - match: \n?|.|$
        - match: $
        # - match: (?=\s+(\/\/|{{tag_characters}}{1,}\p{L}\S+))|$ # Stop beforea a comment or tag
          pop: true

  checkbox:
    - match: '(?<![^\t]){{checkbox_open}}\s{{checkbox_closed}}(?=[^\n\S])'
      comment: Checkbox item
      scope: string.txt checkbox.txt
      push:
        - include: bold
        - include: italic
        - include: quote
        - include: highlight
        - include: highlight2
        - include: number
        - include: key
        - include: uri
        - include: list
        - include: list2
        - include: checkbox
        - include: checkbox_marked1
        - include: checkbox_marked2
        - include: special1
        - include: special2
        - include: tag1
        - include: tag2
        - include: tag3
        - meta_content_scope: checkbox-after.txt
        - match: (?=\s+\/\/)|$
          pop: true

  checkbox_marked1:
    - match: '(?<![^\t]){{checkbox_open}}[Xx\*✓]{{checkbox_closed}}(?=[^\n\S])'
      comment: Checkbox item — marked as done/complete/ignored/dismissed
      scope: string.txt checkbox_marked1.txt
      push:
        - match: '.*?$'
          scope: checkbox_marked1-after.txt
          pop: true

  checkbox_marked2:
    - match: '(?<![^\t]){{checkbox_open}}[\-‐–!]{{checkbox_closed}}(?=[^\n\S])'
      comment: Checkbox item — marked as important/high-priority
      scope: string.txt checkbox_marked2.txt
      push:
        - include: bold
        - include: italic
        - include: quote
        - include: highlight
        - include: highlight2
        - include: number
        - include: key
        - include: uri
        - include: list
        - include: list2
        - include: checkbox
        - include: checkbox_marked1
        - include: checkbox_marked2
        - include: special1
        - include: special2
        - include: tag1
        - include: tag2
        - include: tag3
        - meta_content_scope: checkbox_marked2-after.txt
        - match: (?=\s+\/\/)|$
          pop: true

  comment:
    - match: '(?<!\S)\/\/'
      comment: Comment
      scope: punctuation.definition.comment.txt comment.txt
      push:
        - meta_scope: comment.line.double-slash.txt comment-inside.txt
        - match: '$\n?'
          pop: true

  unformatted:
    - match: (?<=^|\t)`(?=[^\n\S])
      comment: Unformatted
      scope: unformatted.txt
      push:
        - meta_include_prototype: false
        - meta_content_scope: unformatted-inside.txt
        - match: \n?|.|$
        - match: $
          pop: true
