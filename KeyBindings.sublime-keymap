[
	{ "keys": ["ctrl+shift+alt+."], "command": "alignment" },
	{ "keys": ["ctrl+tab"], "command": "next_view" },
	{ "keys": ["ctrl+shift+tab"], "command": "prev_view" },
	{ "keys": ["ctrl+alt+w"], "command": "close_workspace" },
	{ "keys": ["ctrl+alt+p"], "command": "prompt_select_workspace" },
	{ "keys": ["ctrl+shift+w"], "command": "close_all" },
	// Fix Beginning of line
	// { "keys": ["home"], "command": "move_to", "args": {"to": "hardbol", "extend": false} },
	// Fix End of line
	{ "keys": ["end"], "command": "move_to", "args": {"to": "hardeol", "extend": false} },
	// Fix beginning of line + select
	{ "keys": ["shift+home"], "command": "move_to", "args": {"to": "hardbol", "extend": true} },
	// Fix end of line + select
	{ "keys": ["shift+end"], "command": "move_to", "args": {"to": "hardeol", "extend": true} },

	// Auto pair asterisks, unless text around matches regex
	{ "keys": ["*"], "command": "insert_snippet", "args": {"contents": "*$0*"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "not_regex_contains", "operand": "(?:\\p{L}|[\\L\\S]|\\d)$", "match_all": true },
			{ "key": "following_text", "operator": "not_regex_contains", "operand": "^(?:\\p{L}|[\\L\\S]|\\d)", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	// if caret is surrounded by asterisks then advance caret when typign asterisk instead of inserting new asterisk
	{ "keys": ["*"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\\*", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	// add asterists around selection
	{ "keys": ["*"], "command": "insert_snippet", "args": {"contents": "*${0:$SELECTION}*"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
			{ "key": "text", "operator": "regex_contains", "operand": "\\S", "match_all": true },
			{ "key": "text", "operator": "not_regex_contains", "operand": "[\\r\\n]", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	// keyboard commands for basicaly the same things
	{ "keys": ["ctrl+b"], "command": "insert_snippet", "args": {"contents": "*$0*"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "not_regex_contains", "operand": "(?:\\p{L}|[\\L\\S]|\\d)$", "match_all": true },
			{ "key": "following_text", "operator": "not_regex_contains", "operand": "^(?:\\p{L}|[\\L\\S]|\\d)", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	// if caret is surrounded by asterisks then remove asterisks around caret
	{ "keys": ["ctrl+b"], "command": "run_macro_file", "args": {"file": "res://Packages/Plain Text Enhanced/macros/Delete Around.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\\*$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\\*", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	// add asterisks around selection
	{ "keys": ["ctrl+b"], "command": "insert_snippet", "args": {"contents": "*${0:$SELECTION}*"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
			{ "key": "text", "operator": "regex_contains", "operand": "\\S", "match_all": true },
			{ "key": "text", "operator": "not_regex_contains", "operand": "[\\r\\n]", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	// if selection is surrounded by asterisks then remove asterisks around selection
	{ "keys": ["ctrl+b"], "command": "run_macro_file", "args": {"file": "res://Packages/Plain Text Enhanced/macros/Delete Around Selection.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "(?:\\*)$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^(?:\\*)", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\\*$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\\*", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	// Remove following asterisk
	{ "keys": [" "], "command": "run_macro_file", "args": {"file": "res://Packages/Plain Text Enhanced/macros/Delete Right.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\\*$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\\*", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},

	// Auto pair underscores
	{ "keys": ["_"], "command": "insert_snippet", "args": {"contents": "_$0_"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "not_regex_contains", "operand": "(?:\\p{L}|[\\L\\S]|\\d)$", "match_all": true },
			{ "key": "following_text", "operator": "not_regex_contains", "operand": "^(?:\\p{L}|[\\L\\S]|\\d)", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	{ "keys": ["_"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^_", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	{ "keys": ["_"], "command": "insert_snippet", "args": {"contents": "_${0:$SELECTION}_"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
			{ "key": "text", "operator": "regex_contains", "operand": "\\S", "match_all": true },
			{ "key": "text", "operator": "not_regex_contains", "operand": "[\\r\\n]", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "_$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^_", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	// Remove following underscore
	{ "keys": [" "], "command": "run_macro_file", "args": {"file": "res://Packages/Plain Text Enhanced/macros/Delete Right.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "_$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^_", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},

	// Auto pair grave accents
	{ "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`$0`"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "not_regex_contains", "operand": "(?:\\p{L}|[\\L\\S]|\\d)$", "match_all": true },
			{ "key": "following_text", "operator": "not_regex_contains", "operand": "^(?:\\p{L}|[\\L\\S]|\\d)", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	{ "keys": ["`"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	{ "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`${0:$SELECTION}`"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
			{ "key": "text", "operator": "regex_contains", "operand": "\\S", "match_all": true },
			{ "key": "text", "operator": "not_regex_contains", "operand": "[\\r\\n]", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "`$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	// // Auto pair double grave accents
	// { "keys": ["`"], "command": "insert_snippet", "args": {"contents": "$0``"}, "context":
	// 	[
	// 		{ "key": "preceding_text", "operator": "regex_contains", "operand": "``$", "match_all": true },
	// 		{ "key": "following_text", "operator": "not_regex_contains", "operand": "^`", "match_all": true },
	// 		{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
	// 	]
	// },
	// Remove following grave accent
	{ "keys": [" "], "command": "run_macro_file", "args": {"file": "res://Packages/Plain Text Enhanced/macros/Delete Right.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "`$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	// Remove following double grave accents
	{ "keys": [" "], "command": "run_macro_file", "args": {"file": "res://Packages/Plain Text Enhanced/macros/Delete Right 2.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "``$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^``", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},

	// Auto pair circumflex accents
	{ "keys": ["^"], "command": "insert_snippet", "args": {"contents": "^$0^"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "not_regex_contains", "operand": "(?:\\p{L}|[\\L\\S]|\\d)$", "match_all": true },
			{ "key": "following_text", "operator": "not_regex_contains", "operand": "^(?:\\p{L}|[\\L\\S]|\\d)", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	{ "keys": ["^"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\\^", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	{ "keys": ["^"], "command": "insert_snippet", "args": {"contents": "^${0:$SELECTION}^"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
			{ "key": "text", "operator": "regex_contains", "operand": "\\S", "match_all": true },
			{ "key": "text", "operator": "not_regex_contains", "operand": "[\\r\\n]", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\\^$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\\^", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	// Auto pair double circumflex accents
	{ "keys": ["^"], "command": "insert_snippet", "args": {"contents": "$0^^"}, "context":
		[
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\\^\\^$", "match_all": true },
			{ "key": "following_text", "operator": "not_regex_contains", "operand": "^\\^", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	// Remove following circumflex accent
	{ "keys": [" "], "command": "run_macro_file", "args": {"file": "res://Packages/Plain Text Enhanced/macros/Delete Right.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\\^$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\\^", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	// Remove following double circumflex accents
	{ "keys": [" "], "command": "run_macro_file", "args": {"file": "res://Packages/Plain Text Enhanced/macros/Delete Right 2.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\\^\\^$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\\^\\^", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},

	// Auto pair quotation marks
	{ "keys": ["\""], "command": "insert_snippet", "args": {"contents": "\"$0\""}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "not_regex_contains", "operand": "(?:\\p{L}|[\\L\\S]|\\d)$", "match_all": true },
			{ "key": "following_text", "operator": "not_regex_contains", "operand": "^(?:\\p{L}|[\\L\\S]|\\d)", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	{ "keys": ["\""], "command": "move", "args": {"by": "characters", "forward": true}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\"", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	{ "keys": ["\""], "command": "insert_snippet", "args": {"contents": "\"${0:$SELECTION}\""}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
			{ "key": "text", "operator": "regex_contains", "operand": "\\S", "match_all": true },
			{ "key": "text", "operator": "not_regex_contains", "operand": "[\\r\\n]", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\"$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\"", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	// Remove following quotation marks
	{ "keys": [" "], "command": "run_macro_file", "args": {"file": "res://Packages/Plain Text Enhanced/macros/Delete Right.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\"$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\"", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},

	// Checkboxes - caret movement
	{ "keys": ["tab"], "command": "run_macro_file", "args": {"file": "res://Packages/Plain Text Enhanced/macros/Insert Space, Move Caret after Checkbox and Insert Space.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "(?<![^\\t])[\\(\\[\\{]$", "match_all": false },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^[\\)\\]\\}]$", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	{ "keys": ["tab"], "command": "run_macro_file", "args": {"file": "res://Packages/Plain Text Enhanced/macros/Move Caret after Checkbox and Insert Space.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "(?<![^\\t])[\\(\\[\\{].+$", "match_all": false },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^[\\)\\]\\}]$", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	{ "keys": ["tab"], "command": "run_macro_file", "args": {"file": "res://Packages/Plain Text Enhanced/macros/Move Caret after Checkbox and Insert Space.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "(?<![^\\t])[\\(\\[\\{]$", "match_all": false },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^.+[\\)\\]\\}]$", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	{ "keys": ["tab"], "command": "run_macro_file", "args": {"file": "res://Packages/Plain Text Enhanced/macros/Move Caret after Checkbox.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "(?<![^\\t])[\\(\\[\\{].+$", "match_all": false },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^[\\)\\]\\}]\\s", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	{ "keys": ["tab"], "command": "run_macro_file", "args": {"file": "res://Packages/Plain Text Enhanced/macros/Move Caret after Checkbox.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "(?<![^\\t])[\\(\\[\\{]$", "match_all": false },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^.+[\\)\\]\\}]\\s", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	// Select checkbox contents
	{ "keys": ["alt+home"], "command": "run_macro_file", "args": {"file": "res://Packages/Plain Text Enhanced/macros/Move Caret into Checkbox and Select Contents.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "(?<![^\\t])[\\(\\[\\{](.+?)[\\)\\]\\}]", "match_all": true },
			// { "key": "following_text", "operator": "regex_contains", "operand": "\\)|\\]", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
	{ "keys": ["alt+home"], "command": "run_macro_file", "args": {"file": "res://Packages/Plain Text Enhanced/macros/Move Caret into Checkbox.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "(?<![^\\t])[\\(\\[\\{](.{0})[\\)\\]\\}]", "match_all": true },
			// { "key": "following_text", "operator": "regex_contains", "operand": "\\)|\\]", "match_all": true },
			{ "key": "selector", "operator": "equal", "operand": "text.plain, text.plaintextenhanced", "match_all": true },
		]
	},
]